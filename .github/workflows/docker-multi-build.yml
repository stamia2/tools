name: Build, Push, and Clean Old Images

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # 必须！允许删除镜像
      id-token: write  # 必须！用于 GHCR API 认证

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push new image (with latest and git-sha tags)
        env:
          FOLDERS: "xhttp bun-2go python-2go nodejs-2go nodejs-sb"
        run: |
          for folder in $FOLDERS; do
            lower_name=$(echo "$folder" | tr '[:upper:]' '[:lower:]')
            echo "🏗️ Building ghcr.io/stamia2/tools/$lower_name"
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --push \
              --no-cache \
              -t "ghcr.io/stamia2/tools/$lower_name:latest" \
              -t "ghcr.io/stamia2/tools/$lower_name:${{ github.sha }}" \
              "./$folder"
          done

      - name: Clean up ALL old images (keep only latest)
        env:
          FOLDERS: "xhttp bun-2go python-2go nodejs-2go nodejs-sb"
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for folder in $FOLDERS; do
            lower_name=$(echo "$folder" | tr '[:upper:]' '[:lower:]')
            package="tools/$lower_name"
            echo "🧹 Cleaning old versions of ghcr.io/stamia2/$package..."

            # 获取所有镜像标签（包括 git-sha 标签）
            response=$(curl -s -H "Authorization: Bearer $GHCR_TOKEN" \
              "https://ghcr.io/v2/stamia2/$package/tags/list" || echo '{"tags":[]}')

            # 提取所有非 latest 的标签
            tags=$(echo "$response" | jq -r '.tags? // [] | .[] | select(. != "latest")')

            if [ -z "$tags" ]; then
              echo "ℹ️ No old images to delete for ghcr.io/stamia2/$package"
              continue
            fi

            echo "🔍 Found old tags to delete: $tags"
            for tag in $tags; do
              echo "🗑️ Deleting ghcr.io/stamia2/$package:$tag"
              digest=$(curl -s -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
                -H "Authorization: Bearer $GHCR_TOKEN" \
                "https://ghcr.io/v2/stamia2/$package/manifests/$tag" \
                | jq -r '.config.digest // empty')

              if [ -n "$digest" ]; then
                curl -X DELETE -H "Authorization: Bearer $GHCR_TOKEN" \
                  "https://ghcr.io/v2/stamia2/$package/manifests/$digest"
                echo "✅ Deleted $tag (digest: $digest)"
              else
                echo "⚠️ Failed to delete $tag (missing digest)"
              fi
            done
          done
