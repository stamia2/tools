name: Build huggingface Image

on:
  push:
    branches: [ serverless-xhttp ]
    paths:
      - 'Dockerfile'
      - 'app.js'
      - 'package.json'
      - 'index.html'
  pull_request:
    branches: [ serverless-xhttp ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # 移除 ref: huggingface 参数，自动检出触发分支
          
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate image tag
        id: tag-generator
        run: |
          # 使用分支名作为标签（如 serverless-xhttp）
          BRANCH=$(echo "${{ github.ref }}" | sed 's#refs/heads/##')
          echo "tag=$BRANCH" >> $GITHUB_OUTPUT
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # 使用动态生成的标签（基于分支名）
          tags: |
            ghcr.io/${{ github.repository_owner }}/hug:${{ steps.tag-generator.outputs.tag }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=http server
            org.opencontainers.image.licenses=MIT
          cache-from: type=gha
          cache-to: type=gha,mode=max
